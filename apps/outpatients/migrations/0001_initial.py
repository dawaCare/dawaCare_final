# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-13 15:38
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'allergies',
                'verbose_name_plural': 'allergies',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appt_date', models.DateTimeField()),
                ('followed_up', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'appointments',
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacted_patient', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('appt_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Appointment')),
                ('pcc', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'appt_reminders',
                'verbose_name_plural': 'Appointment Reminders',
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'certifications',
                'verbose_name_plural': 'certifications',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=70, unique=True)),
            ],
            options={
                'db_table': 'cities',
                'verbose_name_plural': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=70, unique=True)),
            ],
            options={
                'db_table': 'countries',
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'diagnoses',
                'verbose_name_plural': 'Diagnoses',
            },
        ),
        migrations.CreateModel(
            name='DiagnosisCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'diagnosis_categories',
                'verbose_name_plural': 'Diagnosis Categories',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=70, unique=True)),
            ],
            options={
                'db_table': 'districts',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('main_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alt_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address1', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 2')),
                ('certifications', models.ManyToManyField(blank=True, to='outpatients.Certification')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.City')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.District')),
            ],
            options={
                'db_table': 'doctors',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('main_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alt_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('relationship', models.CharField(blank=True, choices=[(b'Sib', b'Sibling'), (b'M', b'Mother'), (b'F', b'Father'), (b'C', b'Cousin'), (b'F', b'Friend'), (b'D', b'Daughter'), (b'S', b'Son')], max_length=10)),
                ('address1', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 2')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.City')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.District')),
            ],
            options={
                'db_table': 'emergency_contacts',
                'verbose_name_plural': 'Emergency Contacts',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('main_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alt_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address1', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 2')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.City')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.District')),
            ],
            options={
                'db_table': 'facilities',
                'verbose_name_plural': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'medications',
                'verbose_name_plural': 'Medications',
            },
        ),
        migrations.CreateModel(
            name='MedicationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'medication_categories',
                'verbose_name_plural': 'Medication Categories',
            },
        ),
        migrations.CreateModel(
            name='MedicationReminder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacted_patient', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('pcc', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'med_reminders',
                'verbose_name_plural': 'Medication Reminders',
            },
        ),
        migrations.CreateModel(
            name='Outpatient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z\\s]*$', 'Only alphanumeric characters are allowed.')])),
                ('surname', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z\\s]*$', 'Only alphanumeric characters are allowed.')])),
                ('middle_name', models.CharField(blank=True, max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('main_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alt_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('occupation', models.CharField(blank=True, max_length=30)),
                ('pregnant', models.BooleanField(default=False)),
                ('signed_consent_for_roi', models.BooleanField(default=True)),
                ('reason_for_not_signing_consent', models.CharField(blank=True, max_length=255)),
                ('admitted', models.NullBooleanField()),
                ('admission_fee', models.IntegerField(blank=True, null=True)),
                ('consultation_fee', models.FloatField(blank=True, null=True)),
                ('has_all_prescribed_medications', models.NullBooleanField()),
                ('issues_with_taking_medication', models.NullBooleanField()),
                ('address1', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 2')),
                ('allergies', models.ManyToManyField(blank=True, to='outpatients.Allergy')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.City')),
                ('diagnoses', models.ManyToManyField(blank=True, to='outpatients.Diagnosis')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.District')),
            ],
            options={
                'db_table': 'outpatients',
            },
        ),
        migrations.CreateModel(
            name='PrescribedMed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route', models.CharField(choices=[(b'AAA', b'AAA (Apply to Affected Area)'), (b'AD', b'AD (Right ear)'), (b'AS', b'AS (Left ear)'), (b'AU', b'AU (Each ear)'), (b'IJ', b'IJ (Injection)'), (b'IM', b'IM (Intramuscular)'), (b'IN', b'IN (Intranasal)'), (b'INJ', b'INJ (Injection)'), (b'IV', b'IV (Intravenous)'), (b'NPO', b'NPO (Nothing By Mouth)'), (b'OD', b'OD (right ear)'), (b'OS', b'PO (left ear)'), (b'OU', b'OU (both eyes)'), (b'PO', b'PO (orally or by mouth)'), (b'PR', b'PR (rectum)'), (b'PV', b'PV (vagina)'), (b'SL', b'SL (Sublingual)'), (b'TOP', b'TOP (topical)')], max_length=5)),
                ('frequency', models.CharField(choices=[(b'ac', b'ac (before meals)'), (b'achs', b'achs (before meals and at bedtime)'), (b'alt. h.', b'alt. h. (every other hour)'), (b'ap', b'ap (before dinner)'), (b'ATC', b'ATC (around the clock)'), (b'BID', b'BID (twice a day)'), (b'n', b'n (in the night)'), (b'noct. maneq.', b'noct. maneq. (night and morning)'), (b'o.d', b'o.d. (once per day)'), (b'prn', b'prn (as needed)'), (b'pc', b'pc (after meals)'), (b'q12h', b'q12h (every 12 hours)'), (b'qd', b'qd (daily)'), (b'q2h', b'q2h (every 2 hours)'), (b'q3h', b'q3h (every 3 hours)'), (b'q4h', b'q4h (every 4 hours)'), (b'q6h', b'q6h (every 6 hours)'), (b'q6PM', b'q6PM (every evening at 6pm)'), (b'q8h', b'q8h (every 8 hours)'), (b'qam', b'qam (every morning)'), (b'QD', b'QD (every day)'), (b'qh', b'qh (every hour)'), (b'qhs', b'qhs (every night at bedtime)'), (b'qid', b'qid (four times a day)'), (b'qod', b'qod (every other day)'), (b'TID', b'TID (three times a day)'), (b'tid ac', b'tid ac (three times a day before meals)'), (b'TIN', b'TIN (three times a night)'), (b'TIW', b'TIW (three times a week)')], max_length=15)),
                ('dosage', models.CharField(max_length=10)),
                ('end_date', models.DateField(null=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescription', to='outpatients.Medication')),
                ('outpatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescription', to='outpatients.Outpatient')),
            ],
            options={
                'db_table': 'prescribedmeds',
                'verbose_name_plural': 'Prescribed Medications',
            },
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(max_length=70, unique=True)),
            ],
            options={
                'db_table': 'quarters',
                'verbose_name_plural': 'quarters',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=70, unique=True)),
            ],
            options={
                'db_table': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'specialties',
                'verbose_name_plural': 'specialties',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateTimeField()),
                ('doctors_note', models.TextField(blank=True)),
                ('patient_received_ed', models.BooleanField(default=False)),
                ('lab_fee', models.FloatField(blank=True, null=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Department')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Doctor')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Facility')),
                ('outpatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Outpatient')),
            ],
            options={
                'db_table': 'visits',
                'verbose_name_plural': 'Visits',
            },
        ),
        migrations.AddField(
            model_name='outpatient',
            name='medications',
            field=models.ManyToManyField(through='outpatients.PrescribedMed', to='outpatients.Medication'),
        ),
        migrations.AddField(
            model_name='outpatient',
            name='quarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Quarter'),
        ),
        migrations.AddField(
            model_name='outpatient',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Region'),
        ),
        migrations.AddField(
            model_name='medicationreminder',
            name='prescribed_med',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.PrescribedMed'),
        ),
        migrations.AddField(
            model_name='medication',
            name='medication_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.MedicationCategory'),
        ),
        migrations.AddField(
            model_name='facility',
            name='quarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Quarter'),
        ),
        migrations.AddField(
            model_name='facility',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Region'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='outpatient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Outpatient'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='quarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Quarter'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Region'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='quarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Quarter'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Region'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='specialties',
            field=models.ManyToManyField(to='outpatients.Specialty'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.DiagnosisCategories'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Country'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Department'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Facility'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Visit'),
        ),
    ]
