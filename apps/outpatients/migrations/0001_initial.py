# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-11 21:20
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'allergies',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appt_date', models.DateTimeField()),
                ('followed_up', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'appointments',
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacted_patient', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('appt_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Appointment')),
                ('pcc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'appt_reminders',
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'certifications',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'diagnoses',
            },
        ),
        migrations.CreateModel(
            name='DiagnosisCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'diagnosis_categories',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'districts',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('main_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alt_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address1', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 2')),
                ('certifications', models.ManyToManyField(blank=True, to='outpatients.Certification')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.City')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.District')),
            ],
            options={
                'db_table': 'doctors',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('main_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alt_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('relationship', models.CharField(blank=True, choices=[('Sib', 'Sibling'), ('M', 'Mother'), ('F', 'Father'), ('C', 'Cousin'), ('F', 'Friend'), ('D', 'Daughter'), ('S', 'Son')], max_length=10)),
                ('address1', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 2')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.City')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.District')),
            ],
            options={
                'db_table': 'emergency_contacts',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('main_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alt_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address1', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 2')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.City')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.District')),
            ],
            options={
                'db_table': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'medications',
            },
        ),
        migrations.CreateModel(
            name='MedicationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'medication_categories',
            },
        ),
        migrations.CreateModel(
            name='MedicationReminder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacted_patient', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('pcc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'med_reminders',
            },
        ),
        migrations.CreateModel(
            name='Outpatient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('surname', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('middle_name', models.CharField(blank=True, max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('main_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('alt_phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('occupation', models.CharField(blank=True, max_length=30)),
                ('pregnant', models.BooleanField(default=False)),
                ('signed_consent_for_roi', models.BooleanField(default=True)),
                ('reason_for_not_signing_consent', models.TextField(blank=True)),
                ('admitted', models.NullBooleanField()),
                ('admission_fee', models.IntegerField(blank=True, null=True)),
                ('consultation_fee', models.FloatField(blank=True, null=True)),
                ('has_all_prescribed_medications', models.NullBooleanField()),
                ('issues_with_taking_medication', models.NullBooleanField()),
                ('address1', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, verbose_name='Address Line 2')),
                ('allergies', models.ManyToManyField(blank=True, to='outpatients.Allergy')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.City')),
                ('diagnoses', models.ManyToManyField(blank=True, to='outpatients.Diagnosis')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.District')),
            ],
            options={
                'db_table': 'outpatients',
            },
        ),
        migrations.CreateModel(
            name='PrescribedMed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route', models.CharField(choices=[('Mouth', 'By Mouth')], max_length=10)),
                ('frequency', models.CharField(choices=[('BID', 'BID')], max_length=10)),
                ('dosage', models.CharField(max_length=10)),
                ('end_date', models.DateField(null=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescription', to='outpatients.Medication')),
                ('outpatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescription', to='outpatients.Outpatient')),
            ],
            options={
                'db_table': 'prescribedmeds',
            },
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'quarters',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'specialties',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateTimeField()),
                ('doctors_note', models.TextField(blank=True)),
                ('patient_received_ed', models.BooleanField(default=False)),
                ('lab_fee', models.FloatField(blank=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Department')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Doctor')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Facility')),
                ('outpatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Outpatient')),
            ],
            options={
                'db_table': 'visits',
            },
        ),
        migrations.AddField(
            model_name='outpatient',
            name='medications',
            field=models.ManyToManyField(through='outpatients.PrescribedMed', to='outpatients.Medication'),
        ),
        migrations.AddField(
            model_name='outpatient',
            name='quarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Quarter'),
        ),
        migrations.AddField(
            model_name='outpatient',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Region'),
        ),
        migrations.AddField(
            model_name='medicationreminder',
            name='prescribed_med',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.PrescribedMed'),
        ),
        migrations.AddField(
            model_name='medication',
            name='medication_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.MedicationCategory'),
        ),
        migrations.AddField(
            model_name='facility',
            name='quarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Quarter'),
        ),
        migrations.AddField(
            model_name='facility',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Region'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='outpatient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Outpatient'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='quarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Quarter'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Region'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='quarter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Quarter'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='outpatients.Region'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='specialties',
            field=models.ManyToManyField(to='outpatients.Specialty'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.DiagnosisCategories'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Country'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Department'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Facility'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='outpatient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Outpatient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='outpatients.Visit'),
        ),
    ]
